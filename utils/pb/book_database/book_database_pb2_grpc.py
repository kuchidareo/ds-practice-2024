# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from utils.pb.book_database import book_database_pb2 as utils_dot_pb_dot_book__database_dot_book__database__pb2


class BookDatabaseServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddBook = channel.unary_unary(
                '/book_database.BookDatabaseService/AddBook',
                request_serializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.Book.SerializeToString,
                response_deserializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.Head2TailResponse.FromString,
                )
        self.GetBook = channel.unary_unary(
                '/book_database.BookDatabaseService/GetBook',
                request_serializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.GetBookRequest.SerializeToString,
                response_deserializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.Book.FromString,
                )
        self.UpdateBook = channel.unary_unary(
                '/book_database.BookDatabaseService/UpdateBook',
                request_serializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.UpdateBookRequest.SerializeToString,
                response_deserializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.Head2TailResponse.FromString,
                )
        self.Head2Tail = channel.unary_unary(
                '/book_database.BookDatabaseService/Head2Tail',
                request_serializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.Book.SerializeToString,
                response_deserializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.Head2TailResponse.FromString,
                )
        self.Tail2Head = channel.unary_unary(
                '/book_database.BookDatabaseService/Tail2Head',
                request_serializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.Book.SerializeToString,
                response_deserializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.Tail2HeadResponse.FromString,
                )
        self.SendVoteToCoordinator = channel.unary_unary(
                '/book_database.BookDatabaseService/SendVoteToCoordinator',
                request_serializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.VoteCommitRequest.SerializeToString,
                response_deserializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.VoteCommitResponse.FromString,
                )


class BookDatabaseServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Head2Tail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Tail2Head(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendVoteToCoordinator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BookDatabaseServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddBook': grpc.unary_unary_rpc_method_handler(
                    servicer.AddBook,
                    request_deserializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.Book.FromString,
                    response_serializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.Head2TailResponse.SerializeToString,
            ),
            'GetBook': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBook,
                    request_deserializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.GetBookRequest.FromString,
                    response_serializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.Book.SerializeToString,
            ),
            'UpdateBook': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBook,
                    request_deserializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.UpdateBookRequest.FromString,
                    response_serializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.Head2TailResponse.SerializeToString,
            ),
            'Head2Tail': grpc.unary_unary_rpc_method_handler(
                    servicer.Head2Tail,
                    request_deserializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.Book.FromString,
                    response_serializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.Head2TailResponse.SerializeToString,
            ),
            'Tail2Head': grpc.unary_unary_rpc_method_handler(
                    servicer.Tail2Head,
                    request_deserializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.Book.FromString,
                    response_serializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.Tail2HeadResponse.SerializeToString,
            ),
            'SendVoteToCoordinator': grpc.unary_unary_rpc_method_handler(
                    servicer.SendVoteToCoordinator,
                    request_deserializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.VoteCommitRequest.FromString,
                    response_serializer=utils_dot_pb_dot_book__database_dot_book__database__pb2.VoteCommitResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'book_database.BookDatabaseService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BookDatabaseService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/book_database.BookDatabaseService/AddBook',
            utils_dot_pb_dot_book__database_dot_book__database__pb2.Book.SerializeToString,
            utils_dot_pb_dot_book__database_dot_book__database__pb2.Head2TailResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/book_database.BookDatabaseService/GetBook',
            utils_dot_pb_dot_book__database_dot_book__database__pb2.GetBookRequest.SerializeToString,
            utils_dot_pb_dot_book__database_dot_book__database__pb2.Book.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/book_database.BookDatabaseService/UpdateBook',
            utils_dot_pb_dot_book__database_dot_book__database__pb2.UpdateBookRequest.SerializeToString,
            utils_dot_pb_dot_book__database_dot_book__database__pb2.Head2TailResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Head2Tail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/book_database.BookDatabaseService/Head2Tail',
            utils_dot_pb_dot_book__database_dot_book__database__pb2.Book.SerializeToString,
            utils_dot_pb_dot_book__database_dot_book__database__pb2.Head2TailResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Tail2Head(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/book_database.BookDatabaseService/Tail2Head',
            utils_dot_pb_dot_book__database_dot_book__database__pb2.Book.SerializeToString,
            utils_dot_pb_dot_book__database_dot_book__database__pb2.Tail2HeadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendVoteToCoordinator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/book_database.BookDatabaseService/SendVoteToCoordinator',
            utils_dot_pb_dot_book__database_dot_book__database__pb2.VoteCommitRequest.SerializeToString,
            utils_dot_pb_dot_book__database_dot_book__database__pb2.VoteCommitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
